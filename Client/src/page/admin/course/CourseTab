import RichTextEditor from "@/components/RichTextEditor";
import { Button } from "@/components/ui/button";
import {
    Card,
    CardContent,
    CardDescription,
    CardHeader,
    CardTitle,
} from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Navigate, useNavigate } from 'react-router-dom';
import { Label } from "@/components/ui/label";
import {
    Select,
    SelectContent,
    SelectGroup,
    SelectItem,
    SelectLabel,
    SelectTrigger,
    SelectValue,
} from "@/components/ui/select";
import { Loader2, UploadCloud } from "lucide-react";
import React, { useState } from "react";

const CourseTab = () => {
    const navigate = useNavigate();
    const [input, setInput] = useState({
        courseTitle: "",
        subTitle: "",
        description: "",
        category: "",
        courseLevel: "",
        coursePrice: "",
        courseThumbnail: "",
    })
    const isPublished = true;
    const [thumbnail, setThumbnail] = useState(null);
    const [isLoading, setIsLoading] = useState(false);

    const handleThumbnailChange = (e) => {
        const file = e.target.files?.[0];
        if (file) {
            if (file.size > 5 * 1024 * 1024) {
                alert("File size must be less than 5MB");
                return;
            }
            setThumbnail(file);
        }
    };

    const handleSave = () => {
        setIsLoading(true);
        // Simulate an API call or save operation
        setTimeout(() => {
            setIsLoading(false);
            alert("Course saved successfully!");
        }, 2000);
    };

    return (
        <div className="p-6 bg-gray-50 dark:bg-gray-900 min-h-screen">
            <Card className="max-w-4xl mx-auto">
                <CardHeader className=' flex flex-row justify-between'>
                    <div>

                        <CardTitle className="text-2xl font-bold text-gray-800 dark:text-white">
                            Basic Course Information
                        </CardTitle>
                        <CardDescription className="text-gray-600 dark:text-gray-400">
                            Make changes to your course here. Click save when you're done.
                        </CardDescription>
                    </div>
                    <div className="space-x-2">

                        <Button variant="outline" >
                            {
                                isPublished ? "Unpublished" : "Published"
                            }
                        </Button>
                        <Button>Remove Course</Button>
                    </div>
                </CardHeader>

                <CardContent>
                    <div className="space-y-6">
                        {/* Title */}
                        <div className="space-y-2">
                            <Label className="text-gray-700 dark:text-gray-300">Course Title</Label>
                            <Input
                                type="text"
                                name="courseTitle"
                                placeholder="Enter your course title"
                                className="w-full"
                            />
                        </div>

                        {/* Subtitle */}
                        <div className="space-y-2">
                            <Label className="text-gray-700 dark:text-gray-300">Course Subtitle</Label>
                            <Input
                                type="text"
                                name="subTitle"
                                placeholder="Enter your course subtitle"
                                className="w-full"
                            />
                        </div>

                        {/* Description */}
                        <div className="space-y-2">
                            <Label className="text-gray-700 dark:text-gray-300">Description</Label>
                            <RichTextEditor input={input} setInput={setInput} />
                            {/* <textarea
                                className="w-full p-3 rounded-lg border border-gray-300 dark:border-gray-700 dark:bg-gray-800 dark:text-white"
                                rows={5}
                                placeholder="Enter your course description"
                            /> */}
                        </div>

                        {/* Category, Level, and Price */}
                        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                            <div className="space-y-2">
                                <Label className="text-gray-700 dark:text-gray-300">Category</Label>
                                <Select>
                                    <SelectTrigger className="w-full">
                                        <SelectValue placeholder="Select a category" />
                                    </SelectTrigger>
                                    <SelectContent>
                                        <SelectGroup>
                                            <SelectLabel>Category</SelectLabel>
                                            <SelectItem value="Next JS">Next JS</SelectItem>
                                            <SelectItem value="Data Science">Data Science</SelectItem>
                                            <SelectItem value="Frontend Development">
                                                Frontend Development
                                            </SelectItem>
                                            <SelectItem value="Fullstack Development">
                                                Fullstack Development
                                            </SelectItem>
                                            <SelectItem value="MERN Stack Development">
                                                MERN Stack Development
                                            </SelectItem>
                                            <SelectItem value="Javascript">Javascript</SelectItem>
                                            <SelectItem value="Python">Python</SelectItem>
                                            <SelectItem value="Docker">Docker</SelectItem>
                                            <SelectItem value="MongoDB">MongoDB</SelectItem>
                                            <SelectItem value="HTML">HTML</SelectItem>
                                        </SelectGroup>
                                    </SelectContent>
                                </Select>
                            </div>

                            <div className="space-y-2">
                                <Label className="text-gray-700 dark:text-gray-300">Course Level</Label>
                                <Select>
                                    <SelectTrigger className="w-full">
                                        <SelectValue placeholder="Select a course level" />
                                    </SelectTrigger>
                                    <SelectContent>
                                        <SelectGroup>
                                            <SelectLabel>Course Level</SelectLabel>
                                            <SelectItem value="Beginner">Beginner</SelectItem>
                                            <SelectItem value="Medium">Medium</SelectItem>
                                            <SelectItem value="Advance">Advance</SelectItem>
                                        </SelectGroup>
                                    </SelectContent>
                                </Select>
                            </div>

                            <div className="space-y-2">
                                <Label className="text-gray-700 dark:text-gray-300">Price</Label>
                                <Input
                                    type="number"
                                    name="coursePrice"
                                    placeholder="Enter your course price"
                                    className="w-full"
                                />
                            </div>
                        </div>

                        {/* Thumbnail Upload */}
                        <div className="space-y-2">
                            <Label className="text-gray-700 dark:text-gray-300">Course Thumbnail</Label>
                            <div className="flex items-center justify-center w-full">
                                <label className="flex flex-col items-center justify-center w-full h-48 border-2 border-dashed border-gray-300 dark:border-gray-700 rounded-lg cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors">
                                    <div className="flex flex-col items-center justify-center pt-5 pb-6">
                                        <UploadCloud className="w-8 h-8 text-gray-400 mb-3" />
                                        <p className="text-sm text-gray-500 dark:text-gray-400">
                                            <span className="font-semibold">Click to upload</span>
                                        </p>
                                        <p className="text-xs text-gray-500 dark:text-gray-400">
                                            PNG, JPG, or JPEG (Max: 5MB)
                                        </p>
                                        {thumbnail && (
                                            <p className="text-sm text-green-500 mt-2">{thumbnail.name} uploaded</p>
                                        )}
                                    </div>
                                    <input
                                        type="file"
                                        accept="image/*"
                                        onChange={handleThumbnailChange}
                                        className="hidden"
                                    />
                                </label>
                            </div>
                        </div>

                        {/* Buttons */}
                        <div className="flex justify-end gap-4">
                            <Button variant="outline" disabled={isLoading} onClick={() => navigate("/dashboard/instructor-course")}>
                                Cancel
                            </Button>
                            <Button onClick={handleSave} disabled={isLoading}>
                                {isLoading ? (
                                    <>
                                        <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                                        Saving...
                                    </>
                                ) : (
                                    "Save"
                                )}
                            </Button>
                        </div>
                    </div>
                </CardContent>
            </Card>
        </div>
    );
};

export default CourseTab;
